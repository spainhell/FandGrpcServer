using System.Text;

namespace HelpViewer.Helpers;

public class KamToUtfConvertor
{
    private static byte[] TabKtL =
    [
        /* Kamenicky to Latin2 */
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0xac, 0x81, 0x82, 0xd4, 0x84, 0xd2, 0x9b, 0x9f, 0xd8, 0xb7, 0x91, 0xd6, 0x96, 0x92, 0x8e, 0xb5,
        0x90, 0xa7, 0xa6, 0x93, 0x94, 0xe0, 0x85, 0xe9, 0xec, 0x99, 0x9a, 0xe6, 0x95, 0xed, 0xfc, 0x9c,
        0xa0, 0xa1, 0xa2, 0xa3, 0xe5, 0xd5, 0xde, 0xe2, 0xe7, 0xfd, 0xea, 0xe8, 0x9e, 0xf5, 0xae, 0xaf,
        0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0x8b, 0xba, 0xfb, 0xeb, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
        0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xba, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
        0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
        0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
        0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff
    ];
    
    public static string ConvertKamToUtf(byte[] kamenicky)
    {
        // Register the code pages encoding provider
        Encoding.RegisterProvider(CodePagesEncodingProvider.Instance);

        // Now you can use iso-8859-2 encoding
        Encoding latin2Encoding = Encoding.GetEncoding("ibm852");
        
        for (int i = 0; i < kamenicky.Length; i++)
        {
            byte c = kamenicky[i];
            if (c > 0x7F) {
                kamenicky[i] = TabKtL[c];
            }
        }
        
        string latin2String = latin2Encoding.GetString(kamenicky);
        byte[] utf8Bytes = Encoding.UTF8.GetBytes(latin2String);
        return Encoding.UTF8.GetString(utf8Bytes);
    }
}